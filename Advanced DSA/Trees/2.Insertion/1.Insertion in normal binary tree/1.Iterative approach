// Online C++ compiler to run C++ program online
#include <iostream>
#include <queue>
using namespace std;
class TreeNode{
    public:
    TreeNode* left,*right;
    int value;
    TreeNode(int n){
        left = right = nullptr;
        value = n;
    }
};

void Insert(TreeNode* &root,int key){
    if(root==nullptr){
        root = new TreeNode(key);
        return;
    }
    queue<TreeNode*> q;
    q.push(root);
    
    while(!q.empty()){
        TreeNode* current = q.front();
        q.pop();
        
        if(current->left==nullptr){
            current->left = new TreeNode(key);
            return;
        }else{
            q.push(current->left);
        }
        
        if(current->right==nullptr){
            current->right = new TreeNode(key);
            return;
        }else{
            q.push(current->right);
        }
    }
}

void levelOrderTraversal(TreeNode* root) {
    if (root == nullptr) {
        cout << "Tree is empty!!\n";
        return;
    }

    queue<TreeNode*> q;
    q.push(root);

    while (!q.empty()) {
        TreeNode* current = q.front();
        q.pop();

        cout << current->value << " ";

        if (current->left) q.push(current->left);
        if (current->right) q.push(current->right);
    }
    cout << endl;
}

int main() {
    
    TreeNode* root = nullptr;
    int choice,value;bool check=true;
    
    while(check){
        cout << "Menu:\n";
        cout << "1. Insert value into the tree\n";
        cout << "2. Display level-order traversal\n";
        cout << "3. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;
        
        switch (choice) {
            case 1:
                cout << "Enter value to insert: ";
                cin >> value;
                Insert(root, value);
                break;
            case 2:
                cout << "Level-order traversal: ";
                levelOrderTraversal(root);
                break;
            case 3:
                cout << "Exiting...\n";
                break;
            default:
                cout << "Invalid choice. Please try again.\n";
        }
    }
    

    return 0;
}
