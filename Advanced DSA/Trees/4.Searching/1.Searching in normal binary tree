#include <iostream>
#include <queue>
using namespace std;

class TreeNode {
    public:
    TreeNode *left, *right;
    int value;

    TreeNode(int data) {
        left = right = nullptr;
        value = data;
    }
};

int findNode(TreeNode* root,int key){
    if(root==nullptr){
        return -1;
    }
    
    queue<pair<TreeNode*,int>> q;
    q.push({root,0});
    
    
    while(!q.empty()){
        auto [temp,level] = q.front();
        q.pop();
        
        if(temp->value==key){
            return level;
        }
        
        if(temp->left){
            q.push({temp->left,level+1});
        }
        if(temp->right){
            q.push({temp->right,level+1});
        }
    }
    
    return -1;
}

int main() {
    TreeNode *root = new TreeNode(1);
    root->left = new TreeNode(2);
    root->right = new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);

   
   int level = findNode(root,6);
   
   if(level!=-1){
       cout<<"Node found at level : "<<level;
   }else{
       cout<<"Node not found!!";
   }

    return 0;
}
